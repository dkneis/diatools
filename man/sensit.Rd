% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sensit.r
\name{sensit}
\alias{sensit}
\title{Sensitivity analysis}
\usage{
sensit(p, fn, n = 1, passIndex = FALSE, silent = FALSE, logfile = "",
  ...)
}
\arguments{
\item{p}{A numeric matrix representing the parameter sets to be tested.
Each row represents a parameter set. Column names are interpreted as the
names of the parameters.}

\item{fn}{Function of interest. It must accept as its first argument
a named numeric vector of parameters. See \code{passIndex} for the meaning
of a possible second argument. There are no restrictions with
respect to the return value of \code{fn}.}

\item{n}{A positive integer specifying the number of child processes. It is
passed as the first argument to \code{\link[parallel]{makeCluster}}.}

\item{passIndex}{Logical. If \code{TRUE}, function \code{fn} must accept as
its second argument an integer value representing the index of the
currently processed parameter set.}

\item{silent}{Logical. Use this to suppress diagnostic messages.}

\item{logfile}{Name of a file to collect output messages of child processes.
If this is an empty string (default) output messages are likely to appear
on the screen.}

\item{...}{Additional arguments passed to function \code{fn}.}
}
\value{
A list with the following components.
\itemize{
  \item{\code{nFailed} : } The number of 'failed' runs. These are runs where
    \code{fn} triggered a warning or an error.
  \item{\code{whichOK} : } A vector of length \code{nrow(p)} minus
    \code{nFailed} holding the numeric indices of the successful runs.
    It can be used to remove the 'abnormal' parameter sets from the input
    matrix \code{p}, e.g. \code{p[whichOK,]}.
  \item{\code{fnOut} : } A list where each element holds the return value of
    \code{fn} for a single parameter set. For example,
    \code{fnOut[i]} is the output from \code{fn(p[i,], i, ...)}. Elements
    where \code{fn} generated a warning or error are automatically dropped,
    thus, the list is of the same length as the vector \code{whichOK}.
    It will often be necessary to transform the list into a more handy data
    structure, e.g. using the \code{\link{simplifyList}} utility.
  \item{\code{cpu} : } A numeric vector holding the times spent on the
    successfull evaluations of \code{fn}. The vector has the same length as
    \code{whichOK}.
}
}
\description{
Evaluates a function for multiple parameter sets, optionally using
parallel processing.
}
\note{
The function of interest is called as \code{fn(p[i,], ...)} or
  \code{fn(p[i,], i, ...)}, depending on the value of \code{passIndex}. In
  the latter case, the index of the currently processed set is available within
  \code{fn}. This information can be used, for example, for diagnostic
  messages of for creating file names which are unique for each (possibly
  parallel) instance of \code{fn}.

  In any case, \code{fn} is executed within a \code{\link[base]{tryCatch}}
  block. Any error messages (or warnings) are reported as warnings.

  Any data or functions needed within \code{fn} should explicitly be passed
  using the \code{...} argument.
}
\examples{
# Analysis of a model's goodness-of-fit
model= function(p, x) {
  if (p["b"] < 0)
    stop("negative argument for 'sqrt'") # to demonstrate handling of errors
  p["a"] * sqrt(x * p["b"])
}
# Observations
obs= cbind(x=1:50, y=model(c(a=1, b=0.1), 1:50))
# Objective function
mse= function(p, model, obs) { mean((obs[,"y"] - model(p, obs[,"x"]))^2) }
# Parameter sets to try
nSets= 10
p= cbind(a= seq(0, 2, length.out=nSets), b= seq(-0.2, 0.5, length.out=nSets))
# Evaluate obj. function for all sets
x= suppressWarnings(
  sensit(p=p, fn=mse, n=2, model=model, obs=obs, logfile=""))
# Show parameter sets that 'worked' together with results
print(cbind(setIndex=x$whichOK, p[x$whichOK,], mse=simplifyList(x$fnOut)))
}
\author{
David Kneis \email{david.kneis@tu-dresden.de}
}

